/**
 * Basic declarations for the npm modules we use.
 */

 declare module "module" {
   declare export function createRequire(url: any): any;
 }

declare module "debug" {
  declare export default (namespace: string) => (formatter: string, ...args: any[]) => void;
}

declare var require: {
  resolve(specifier: string, opts?: {
    paths: string[]
  }): string,
};

declare module "json5" {
  declare export default {
    parse: (string) => mixed,
  };
}

declare module "semver" {
  declare class SemVer {
    build: Array<string>;
    loose: ?boolean;
    major: number;
    minor: number;
    patch: number;
    prerelease: Array<string | number>;
    raw: string;
    version: string;

    constructor(version: string | SemVer): SemVer;
  }

  declare module.exports: {
    SemVer: SemVer;

    coerce(version: string | SemVer): SemVer | null;
    gt(v1: string, v2: string): boolean;
    intersects(r1: string, r2: string): boolean;
    lt(v1: string, v2: string): boolean;
    major(v: string): number;
    minor(v: string): number;
    patch(v: string): number;
    satisfies(v1: string, r1: string): boolean;
    valid(v: string): boolean;
  }
}

declare module "convert-source-map" {
  import type { SourceMap, SourceMapGenerator } from "source-map";

  declare class Converter {
    toJSON(): string;
    toBase64(): string;
    toComment(): string;
    toObject(): SourceMap
  }

  declare module.exports: {
    SourceMap: SourceMap,
    Converter: Converter,
    fromObject(obj: SourceMap | SourceMapGenerator): Converter,
    fromJSON(str: string | Buffer): Converter,
    fromBase64(str: string): Converter,
    fromComment(str: string): Converter,
    fromMapFileComment(str: string, dir: string): Converter,
    fromSource(str: string): Converter,
    fromMapFileSource(str: string, dir: string): Converter,
    removeComments(str: string): string,
    removeMapFileComments(str: string): string,
    generateMapFileComment(path: string, options?: ?{ multiline: boolean }): string,
  };
}

declare module "core-js-compat/data" {
  declare type Target = "node" | "chrome" | "opera" | "edge" | "firefox" | "safari" | "ie" | "ios" | "android" | "electron" | "samsung" | "rhino";

  declare module.exports: {
    [key: string]: {
      [target: Target]: string;
    }
  }
}
