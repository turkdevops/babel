/* This file is automatically generated by scripts/generators/archived-libs-typings.js */
import { declare } from "@babel/helper-plugin-utils";

declare module "@babel/plugin-syntax-async-functions" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-async-generators" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-bigint" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-class-properties" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-class-static-block" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-dynamic-import" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-exponentiation-operator" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-export-extensions" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-export-namespace-from" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-import-meta" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-json-strings" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-logical-assignment-operators" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-module-string-names" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-nullish-coalescing-operator" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-numeric-separator" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-object-rest-spread" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-optional-catch-binding" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-optional-chaining" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-private-property-in-object" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-top-level-await" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
declare module "@babel/plugin-syntax-trailing-function-commas" {
  let plugin: ReturnType<typeof declare>;
  export = { default: plugin };
}
